#################################################
#
#         CUSTOM CONFIG
#
#################################################
home:
  title: 'Home'
  icon: 'mdi:home-assistant'
  url: 'home'

  # `show_header`
  # Show the Nolu header. This consists of a menu bar, generated by the
  # user defined views (where `show_in_navbar is true`)
  show_header: true

  # `show_in_navbar`
  # Determines if the menu item is showed in native tabs AND nolu menubar
  show_in_navbar: true

  # `greeting`
  # Shows a custom greeting text
  greeting:
    # !IMPORTANT! For some strange reason when starting with a `states(....)`
    # method this will throw an error. When a character is placed in front of
    # it the error doesn't occur. So thats why I placed it in a <span>-tag
    title: |
      <span>{{ states('sensor.greeting') }}</span> {{ user }},
    # `sunny` can be replaced by templating language e.g. {{ states('weather.xxxx') }}
    subtitle: 'It will be a sunny day...'

  rows:
    - widgets:
        #################################################
        #         BINARY SENSOR (motion & contact sensors)
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'binary'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'binary_sensor.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Frontdoor'

          # `battery`
          # object - Contains properties to show a battery indicator
          # optional - no default
          battery:
            # `entity`
            # string - Entity to use
            # required - no default
            entity: 'sensor.xxxxxxx_battery'

            # `visibility`
            # string - The visiblity of the battery indicator
            # Optional - 'always' | 'low' | 'never' - default = 'low' - will be shown only when under 10% (blinking red)
            visibility: 'always'

            # `show_percentage`
            # boolean - Show the battery percentage or not
            # optional - default = false
            show_percentage: true

          # `graph`
          # object - Contains properties for the graph
          # optional - no default
          graph:
            # `entity`
            # string - The entity that is used for the graph
            # required - no default
            entity: 'sensor.xxxxxxx'

            # `hours_to_show`
            # string - The amount of hours to show the values for
            # optional - default = 24
            hours_to_show: 72

            # `line_color`
            # string - The color the line of the graph should be
            # optional - default = 'orange'
            line_color: 'blue'

          # `template`
          # list - Template definitions to use. This will determine which icon is shown
          # optional - no default (use one of the below examples)
          template:
            - 'contact_door'
            # OR
            - 'contact_window'
            # OR
            - 'motion'

        #################################################
        #         CAMERA EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'camera'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'camera.front_door'

          # `template`
          # list - Template definitions to use. This will determine which icon is shown
          # optional - no default (use one of the below examples)
          template:
            - 'camera'

        #################################################
        #         CLIMATE EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'climate' # string | required - widget type

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'climate.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Living room thermostat'

          # `template`
          # list - Template definitions to use. This will determine which icon is shown
          # optional - no default (use one of the below examples)
          template:
            - 'climate_thermostat'
            # OR
            - 'climate_airco'

        #################################################
        #         ENERGY EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'energy' # string | required - widget type

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'sensor.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Current electricity usage' # string | required - name to show

          # `icon`
          # string - Icon to use (see https://materialdesignicons.com/)
          # optional - no default
          icon: 'mdi:lightning-bolt-outline'

        #################################################
        #         FAN EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'fan' # string | required - widget type

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'switch.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Bathroom Fan'

          # `graph`
          # object - Contains properties for the graph
          # optional - no default
          graph:
            # `entity`
            # string - The entity that is used for the graph
            # required - no default
            entity: 'sensor.xxxxxxx'

            # `hours_to_show`
            # string - The amount of hours to show the values for
            # optional - default = 24
            hours_to_show: 72

            # `line_color`
            # string - The color the line of the graph should be
            # optional - default = 'orange'
            line_color: 'blue'

          # `template`
          # list - Template definitions to use. This will determine which icon is shown
          # optional - no default (use one of the below examples)
          template:
            - 'icon_fan'

        #################################################
        #         HUMIDITY SENSOR EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'humidity' # string | required - widget

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'sensor.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Baby Room'

          # `battery`
          # object - Contains properties to show a battery indicator
          # optional - no default
          battery:
            # `entity`
            # string - Entity to use
            # required - no default
            entity: 'sensor.xxxxxxx_battery'

            # `visibility`
            # string - The visiblity of the battery indicator
            # Optional - 'always' | 'low' | 'never' - default = 'low' - will be shown only when under 10% (blinking red)
            visibility: 'always'

            # `show_percentage`
            # boolean - Show the battery percentage or not
            # optional - default = false
            show_percentage: true

          # `graph`
          # object - Contains properties for the graph
          # optional - no default
          graph:
            # `entity`
            # string - The entity that is used for the graph
            # required - no default
            entity: 'sensor.xxxxxxx'

            # `hours_to_show`
            # string - The amount of hours to show the values for
            # optional - default = 24
            hours_to_show: 72

            # `line_color`
            # string - The color the line of the graph should be
            # optional - default = 'orange'
            line_color: 'blue'

        #################################################
        #         LIGHT EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'light' # string | required - widget type

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'light.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Ceiling Spots'

          # `template`
          # list - Template definitions to use. This will determine which icon is shown
          # optional - no default (use one of the below examples)
          template:
            - 'icon_hue_bulb_spot'
            # OR
            - 'icon_hue_wall_lantern'
            # OR
            - 'icon_hue_iris'
            # OR
            - 'icon_hue_lightstrip'
            # OR
            - 'icon_hue_bulb_candle'
            # OR
            - 'icon_hue_floor_shade'
            # OR
            - 'icon_hue_floor_spot'
            # OR
            - 'icon_hue'

        #################################################
        #         MARKDOWN EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'markdown' # string | required - widget type

          # `content`
          # string - The markdown content
          # required - no default
          content: 'Just a markdown card' # string | required - content of the markdown card


        #################################################
        #         BLANK EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'blank' # string | required - widget type

          # `content`
          # string - The blank content
          # required - no default
          content: '' # string | required - content of the blank card

        #################################################
        #         PERSON
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'person'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'person.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Person'

          # `background`
          # object - Defines the options for the person image
          # required - no default
          background:
            # `image`
            # string - The url of the image
            # required - no default
            image: '/local/nolu/profile_images/profile.png'

            # `cover`
            # boolean - Covers the complete widget
            # optional - default = false
            cover: true

        #################################################
        #         POWER PLUG EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'power_plug'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'switch.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Power plug'

          # `battery`
          # object - Contains properties to show a battery indicator
          # optional - no default
          battery:
            # `entity`
            # string - Entity to use
            # required - no default
            entity: 'sensor.xxxxxxx_battery'

            # `visibility`
            # string - The visiblity of the battery indicator
            # Optional - 'always' | 'low' | 'never' - default = 'low' - will be shown only when under 10% (blinking red)
            visibility: 'always'

            # `show_percentage`
            # boolean - Show the battery percentage or not
            # optional - default = false
            show_percentage: true

          # `graph`
          # object - Contains properties for the graph
          # optional - no default
          graph:
            # `entity`
            # string - The entity that is used for the graph
            # required - no default
            entity: 'sensor.xxxxxxx'

            # `hours_to_show`
            # string - The amount of hours to show the values for
            # optional - default = 24
            hours_to_show: 72

            # `line_color`
            # string - The color the line of the graph should be
            # optional - default = 'orange'
            line_color: 'blue'

        #################################################
        #         TEMPERATURE SENSOR EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'temperature'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'sensor.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Baby Room'

          # `battery`
          # object - Contains properties to show a battery indicator
          # optional - no default
          battery:
            # `entity`
            # string - Entity to use
            # required - no default
            entity: 'sensor.xxxxxxx_battery'

            # `visibility`
            # string - The visiblity of the battery indicator
            # Optional - 'always' | 'low' | 'never' - default = 'low' - will be shown only when under 10% (blinking red)
            visibility: 'always'

            # `show_percentage`
            # boolean - Show the battery percentage or not
            # optional - default = false
            show_percentage: true

          # `graph`
          # object - Contains properties for the graph
          # optional - no default
          graph:
            # `entity`
            # string - The entity that is used for the graph
            # required - no default
            entity: 'sensor.xxxxxxx'

            # `hours_to_show`
            # string - The amount of hours to show the values for
            # optional - default = 24
            hours_to_show: 72

            # `line_color`
            # string - The color the line of the graph should be
            # optional - default = 'orange'
            line_color: 'blue'

        #################################################
        #         WEATHER EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'default_weather'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'weather.noluhass'

        #################################################
        #         BATTERIES
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'batteries'
          # `icons_list`
          # The icons to show, maximum of 4 icons can be
          # shown. The first 4 will be shown
          icons_list:
            # `name`
            # string - Name to show in the widget
            # optional - no default
            - name: 'Hue Motion'
              # `type`
              # string - The type of widget
              # required - no default
              entity: 'sensor.xxxxx_battery'
              # `icon`
              # string - Icon to use (see https://materialdesignicons.com/)
              # optional - no default - If `icon` is not defined it will show the
              # percentage in its place
              icon: 'mdi:motion-sensor'

            - name: 'Temperature'
              entity: 'sensor.xxxxx_battery'

            - name: 'Window'
              entity: 'sensor.xxxxx_battery'
              icon: 'mdi:window-open'

            - name: 'Patio Doors'
              entity: 'sensor.xxxxx_battery'

        #################################################
        #         ICONS EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'icons' # string | required - widget type
          # `icons_list`
          # The icons to show, maximum of 4 icons can be
          # shown. The first 4 will be shown
          icons_list:
            # `name`
            # string - Name to show in the widget
            # optional - no default
            - name: 'Whatsapp'

              # `icon`
              # string - Icon to use (see https://materialdesignicons.com/)
              # optional - no default
              icon: 'mdi:whatsapp'

              # `entity`
              # string - Entity to use
              # optional - no default - entity is optional since this can also be a link or other type of icon
              entity: 'weather.noluhass'

              # `tap_action`
              # see for supported properties https://github.com/custom-cards/button-card#action
              tap_action:
                action: 'url'
                url_path: 'https://www.whatsapp.com'

              # `variables`
              # object - In the variables section you can define the colors and gradients for your icon
              #
              # !IMPORTANT! No HEX values can be used since they get interpreted as comments in yaml
              # `active` state depends on the defined `entity`. For the active state the following state
              # values are checked:
              # 'on', 'home', 'active', 'enabled', 'heat', 'cool', 'heat_cool', 'fan', 'open'
              #
              # optional - default colors are used
              variables:
                icon_color: 'rgb(255, 255, 255)' # string | optional - defines the icon color
                bg_color_default: 'rgb(37, 211, 102)' # string | optional - defines the default background color
                # bg_color_active: ... - string | optional - defines the active background color
                # bg_gradient_default: ... - string | optional - defines the default gradient background color
                # bg_gradient_active: ... - string | optional - defines the active gradient background color

            - name: 'Instagram'
              icon: 'mdi:instagram'
              tap_action:
                action: 'url'
                url_path: 'https://www.instagram.com'
              variables:
                icon_color: 'rgb(255, 255, 255)'
                bg_gradient_default: 'linear-gradient(45deg, rgb(64, 93, 230), rgb(88, 81, 219), rgb(131, 58, 180), rgb(193, 53, 132), rgb(225, 48, 108), rgb(253, 29, 29))'

            - name: 'Facebook'
              icon: 'mdi:facebook'
              tap_action:
                action: 'url'
                url_path: 'https://www.facebook.com'
              variables:
                icon_color: 'rgb(255, 255, 255)'
                bg_color_default: 'rgb(59, 89, 152)'

            - name: 'Twitter'
              icon: 'mdi:twitter'
              tap_action:
                action: 'url'
                url_path: 'https://www.twitter.com'
              variables:
                icon_color: 'rgb(255, 255, 255)'
                bg_color_default: 'rgb(29,161,242)'

        #################################################
        #         TEMPERATURE SENSOR EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'temperature'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'sensor.xxxxxxx'

          # `name`
          # string - Name to show in the widget
          # optional - no default
          name: 'Baby Room'

          # `battery`
          # object - Contains properties to show a battery indicator
          # optional - no default
          battery:
            # `entity`
            # string - Entity to use
            # required - no default
            entity: 'sensor.xxxxxxx_battery'

            # `visibility`
            # string - The visiblity of the battery indicator
            # Optional - 'always' | 'low' | 'never' - default = 'low' - will be shown only when under 10% (blinking red)
            visibility: 'always'

            # `show_percentage`
            # boolean - Show the battery percentage or not
            # optional - default = false
            show_percentage: true

          # `graph`
          # object - Contains properties for the graph
          # optional - no default
          graph:
            # `entity`
            # string - The entity that is used for the graph
            # required - no default
            entity: 'sensor.xxxxxxx'

            # `hours_to_show`
            # string - The amount of hours to show the values for
            # optional - default = 24
            hours_to_show: 72

            # `line_color`
            # string - The color the line of the graph should be
            # optional - default = 'orange'
            line_color: 'blue'

        #################################################
        #         WEATHER EXAMPLE
        #################################################
        # `type`
        # string - The type of widget
        # required - no default
        - type: 'default_weather'

          # `entity`
          # string - Entity to use
          # required - no default
          entity: 'weather.noluhass'

#################################################
#
#         NOT-FOUND - 404
#         !DON'T TOUCH!
#
#################################################
not-found:
  title: '404 not found'
  icon: 'mdi:motion'
  url: 'not-found'
  show_in_navbar: false
  show_header: true
  widgets:
    - type: 'text'
      content: |
        ## 404
        Sorry, the page you requested could not be found
